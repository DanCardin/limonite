>>>
    This is a multiline comment!
    Uninitialized variables are disallowed.
    static typing
    and, or, not, is operators
<<<

>> Single line comment!

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>> This is what the syntax should look like!                      <<
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

use std.io.print
use magical_buterflies as magic

when,
    magic.fly()
throws TypeError or KeyboardInterrupt as k,
    print("Darnit couldnt import {1}!", k)
else,
    print("Hurrah!")

class DescendantObject from Object
    fn name(int a, str b = "", bool c: False, ...) -> int
        >>>
            docstring becasue its on the line directly
            after the function delcaration.
        <<<
        
        var a = 34
        var b = 34u
        var c >> This is an error because uninitialised variables are dumb
        var d = 3 >> This is also an error because it redeclares `a`
        def e = "Cannot change"
        
        if a < 3 and a > 4 or 3 <= a,
            whatever()
        else,
            meow()
        . >> Optional period for sake of sentence
        
        for var i in 1..6,
            dosomething()
            
        for var i in 1..3 by 2s,
            do_something_else()
        
        def obj = Object(3)
        assert obj is obj >> True
        
        def obj2 = Object(3)
        assert obj is obj2 >> False
        assert obj equals obj2 >> True
        
        while a is not equal 4,
            dosomething()
        
        return 343



>>> Possible stuff
    Explicit equivalence (maybe)
        if 5.5 is about 5:
    
    Bound checking
        if 5 < a < 6:
    
    Anonymous functions
        a = lambda -> 6 if b || c else 3
    
    Multiline comments:
        >>> This is a comment
            that has multiple lines.
        <<<
    
    Classes and inheritance
        class Descendant from Ancestor,
<<<